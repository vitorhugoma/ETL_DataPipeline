# import the libraries

from datetime import timedelta
# The DAG object; we'll need this to instantiate a DAG
from airflow import DAG
# Operators; we need this to write tasks!
from airflow.operators.bash_operator import BashOperator
# This makes scheduling easy
from airflow.utils.dates import days_ago

#defining DAG arguments

# You can override them on a per-task basis during operator initialization
default_args = {
    'owner': 'Dummy Name',
    'start_date': days_ago(0),
    'email': ['dummy@somemail.com'],
    'email_on_failure': True,
    'email_on_retry': True,
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# define the DAG
dag = DAG(
    'ETL_toll_data',
    default_args=default_args,
    description='Apache Airflow Final Assignment',
    schedule_interval=timedelta(days=1),
)

# task 1 - unzip-data

unzip_data = BashOperator(
    task_id = 'unzip_data'
    bash_command='tar -xvf tolldata.tgz -C /home/project/airflow/dags/finalassignment',
    dag=dag,
)

# task 2 - extract data

extract_data_from_csv = BashOperator(
    task_id = 'extract_data_from_csv',
    bash_command='cut -d"," -f 1-4 /home/project/airflow/dags/finalassignment/vehicle-data.csv > /home/project/airflow/dags/finalassignment/csv_data.csv'
    dag=dag
)

# task 3 - extract data

extract_data_from_tsv = BashOperator(
    task_id = 'extract_data_from_tsv',
    bash_command='cut -f5, 6, 7 /home/project/airflow/dags/finalassignment/tollplaza-data.tsv > /home/project/airflow/dags/finalassignment/tsv_data.csv'
    dag=dag
)


# task 4 - extract data

extract_data_from_fixed_width = BashOperator(
    task_id = 'extract_data_from_fixed_width',
    bash_command='cut -b 57-  /home/project/airflow/dags/finalassignment/payment-data.txt > /home/project/airflow/dags/finalassignment/fixed_width_data.csv'
    dag=dag
)

# task 5 - consolidate_data

consolidate_data = BashOperator(
    task_id='consolidate_data',
    bash_command='paste ../airflow/dags/finalassignment/csv_data.csv ../airflow/dags/finalassignment/tsv_data.csv ../airflow/dags/finalassignment/fixed_width_data.csv > extracted_data.csv',
    dag=dag
)

#Task 6 - Transform

transform_data = BashOperator(
    task_id='transform_data',
    bash_command='tr "[a-z]" "[A-Z]" < extracted_data.csv > transformed_data.csv',
    dag=dag,
)


unzip_data >> extract_data_from_csv >> extract_data_from_tsv >> extract_data_from_fixed_width >> consolidate_data >> transform_data
